plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'

configurations {
    // logback 의존성 제거 => log4j2로 변경을 위함
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // log4j2 추가, 쿼리로그 추가
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

    // MySQL
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Spring Data JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Spring Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Swagger 3
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Spring Boot Devtools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // AWS S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // Jakarta Bean Validation API
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

    // Hibernate Validator
    implementation 'org.hibernate.validator:hibernate-validator'

    // Tika
    implementation 'org.apache.tika:tika-core:1.24'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:3.0.6"
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-source" << "1.8" << "-target" << "1.8"
}

// Qtype 생성 경로
def querydslDir = "$buildDir/generated/querydsl"

clean.doLast {
    file(querydslDir).deleteDir()
}